name: Flutter Build

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Flutter (3.27.0)  # versi ini akan di-install
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.27.0'
          cache: true

      - name: Validate Flutter & Dart versions
        run: |
          flutter --version
          dart --version

      - name: Run build APK
        run: flutter build apk --release

 - name: Extract version from pubspec
  id: extract_version
  run: |
    echo "VERSION_NAME=$(grep 'version:' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\n')" >> $GITHUB_ENV

      - name: Rename APK with version
        run: |
          mv build/app/outputs/flutter-apk/app-release.apk \
             build/app/outputs/flutter-apk/app-release-${{ env.VERSION_NAME }}.apk

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ env.VERSION_NAME }}.apk
          path: build/app/outputs/flutter-apk/app-release-${{ env.VERSION_NAME }}.apk

      - name: Set up Python for Telegram script
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install Python dependencies
        run: pip install requests
- name: Debug environment variables
  run: |
    echo "VERSION_NAME=$VERSION_NAME"
    echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}"
    echo "TELEGRAM_CHAT_ID=${{ secrets.TELEGRAM_CHAT_ID }}"

      - name: Send APK to Telegram
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          VERSION_NAME: ${{ env.VERSION_NAME }}  # <- pastikan ini ditambahkan
        run: python .github/send_telegram.py
